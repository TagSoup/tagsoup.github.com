<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agency <3 | Phx Tag Soup]]></title>
  <link href="http://TagSoup.github.com/blog/categories/agency-3/atom.xml" rel="self"/>
  <link href="http://TagSoup.github.com/"/>
  <updated>2012-10-09T17:08:43-07:00</updated>
  <id>http://TagSoup.github.com/</id>
  <author>
    <name><![CDATA[Phx Tag Soup]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wear More Hats]]></title>
    <link href="http://TagSoup.github.com/blog/2012/03/11/wear-more-hats/"/>
    <updated>2012-03-11T21:34:00-07:00</updated>
    <id>http://TagSoup.github.com/blog/2012/03/11/wear-more-hats</id>
    <content type="html"><![CDATA[<h3>Day 17 of the 30 Day Writing Challenge</h3>

<p>Developers of all types know that they have responsibilities: to clients, to employers, to code standards, and so on. We'd be doing ourselves a disservice, however, if we didn't acknowledge our responsibility to grow into not-typically-dev roles. It goes without saying that if you fall too far in love with a particular language and don't learn alternatives/future-friendly sibling languages, you'll become as certainly obsolete as your beloved language one day will.</p>

<p>This isn't about learning new languages - this is about learning new disciplines. And wearing more hats.</p>

<h3>Lots of hats. Party hats.</h3>

<p>There is probably a spectrum that runs from Designer to to Database Engineer with developers front-end and back in between. Throw in copywriters, project managers, and account executives, and you have a whole world of hats to wear. You might think some of these roles are boring, and they might say the same of you, but that's not the point - branching into other roles makes one immune to ignorance about them. And, if you're lucky, you'll learn a little about what you really love to do with your career.</p>

<!--more-->


<h3>Front End, Back End.</h3>

<p>If you're used to writing Ruby, PHP, Python, or whatever backend language you're comfortable with, then JavaScript, CSS, and HTML might seem like tricycle languages to you. On the surface, back-end languages deal more closely with data and hardware, and are open to huge levels of nuance and particular histories which developers take with them with every new project. JS isn't all namby-pamby and CSS has its own nuances - and both have communities that are huge and accessible. Getting used to browser compatibility issues will help solve your fellow devs hours of headaches in the future, and getting accustomed to html5 will help relieve your own frustration with web objects.</p>

<p>If you're a front-end guy or gal, learn what you can about the server-side - talk to back-end developers and start going to hack nights. If you have a high familiarity with JavaScript, use Node.js to catapult you into the world of server-side scripting. It's probably a matter of time before these two disciplines are looked at in the same way, after all.</p>

<h3>This doesn't mean you have to wear a Beret.</h3>

<p>Maybe you're already designing in code. That's great! Keep up the good work. If not, you should know that coding starts at the design level. Most web designs, in Photoshop or otherwise, have a structure inherently established, and proper use of layering and folder-structures within a document only help add to this structure.</p>

<p>Talk to your designers and see how they setup their grids, their layer/folder structure, and their element hierarchy. It could give you a great head-start when building out your web templates or reveal the designer's intentions before you get too far down your path in coding the site.</p>

<h3>Lose the Lorem Ipsum</h3>

<p>Ditch it. If you're building out a website with greeked text, take the time to write some sample content for the page you're building. It will help give you an idea of what the user will experience when he/she hits your page after you launch. At this level, you'll often realize that a page is unnecessary because the content is redundant - just because the site map specifies it should exist doesn't give it validity. Tap into your inner Copywriter and give it a go!</p>

<h3>Your Sunday Best</h3>

<p>Some of the best devs I know are serious introverts. There's no fault in this: they put on their headphones and crank out better code than I could muster. But there's a reason for the extroversion that project managers and account executives extoll in their peers - clients love being spoken to in their own language, and they love being able to feel like they can speak to you in yours. If you comment your code (and you do. I know you do.), just expand your comments into notes that a layman could understand. Why you're minimizing a file, the reasons behind g-zipping or calling jQuery rather than writing in core JavaScript, etc. all matter when the client is expected to ever maintain a project, or even to help explain just what they're getting out of the deal. More than anything, working on speaking with clients will help you connect with them on what their needs really are, and quit playing telephone with their IT team or middle managers.</p>

<hr />

<p>There are lots of hats you can wear, either in an ad agency or web firm world. Just because you're comfortable as a developer doesn't mean you shouldn't get uncomfortable from time to time. Take chances and do new things!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 8 of 30: Tales from the Agency]]></title>
    <link href="http://TagSoup.github.com/blog/2012/03/02/day-8-of-30-tales-from-the-agency/"/>
    <updated>2012-03-02T15:54:00-07:00</updated>
    <id>http://TagSoup.github.com/blog/2012/03/02/day-8-of-30-tales-from-the-agency</id>
    <content type="html"><![CDATA[<h4>Day 8 of the 30 Day Writing Challenge</h4>

<p><img class="center" src="/images/pitfall.jpg" width="700"></p>

<h3>How to Avoid Pitfalls When Creating Custom Illustrations for Clients.</h3>

<p>One of the first things I learned after I graduated from college is as a designer you should never become emotionally attached to your designs.  It's a lesson that has served me well during my career.  Don't get me wrong, when a client really likes something I have done, I'm happy and I feel good about my work, but I don't jump up on my chair and crown myself God of design, or Lord of the Office.  On the flip side if a client doesn't like what I have done, I'm not happy, but I don't go into the bathroom and cry about it.  It's all part of the business and I accept that.  Unfortunately, this principle was recently put to the test when I was assigned to create three custom illustrations for a clients website.</p>

<!--more-->


<h3>With Great Knowledge Comes Great Responsibility</h3>

<p>It seemed like a pretty straight forward project.  The client wanted a single page site that would provide information to potential customers.  The only thing that was different was he thought it would be cool to have three custom banners rotating rather than photography.  Great, I like to do illustrations and stock photography is awful so should be fun.  And that's where I made my first mistake.  I didn't view this as a normal project, so I didn't follow our normal process for approval.</p>

<h3>What I did do?</h3>

<p>The first thing I did was scour the internet for inspiration.  I went through all of my normal design resources, along with some new ones, since this was the first time I was doing illustrations for a client.  I found several concepts that I really liked and that I thought would fit well with the tag lines he had provided.  I showed the concepts to my creative director and to our senior designer.  Both of them were super excited and thought they would be great for this project.  The next thing I did was figure out what type of illustration style I would use.  Since I can really only illustrate in a couple of different styles, this wasn't that hard.  Once I had those two things figured out, then I developed a color palette that I could use for both the illustrations and the client's site.  Then it was off to the races.   I spent the next three days fleshing out my three illustrations.   Once I had put the finishing touches on them I submitted them to the project lead who then showed them to client.  As far as I was concerned this was a mere formality.  Of course the client was going to love them.  Just look at these illustrations, who wouldn't want these on their brand new site.</p>

<p><img class="center" src="/images/watering.jpg" width="700">
<img class="center" src="/images/fishing.jpg" width="700"></p>

<p>Well as it goes, it turns out the client did not want these on his site.  What I found out, which I should have found out right from the beginning, is the client didn't like my concepts.  He loved the illustration quality and the style, but he wasn't thrilled about the themes.  He felt they were too playful and did not convey the professionalism he wanted his site to have.  He especially was not thrilled that their were people in the illustrations, something he had not previously mentioned, but would have come up had I submitted my concepts before actually completing the illustrations.  Well, needless to say, I was pretty upset.  I had spent a ton of time on these illustrations, and I didn't agree with his assessment.  I didn't understand how anyone could not like my illustrations, and that's when I realized that I had broken my rule.  I had become emotionally attached to this project and made it about me instead of about my client.  I didn't submit my concepts to him, because it wasn't about him, it was about me.  Once I realized this I immediately calmed down, and set up an appointment to meet with the client.</p>

<h3>What I should have done</h3>

<p>The client and I met, we discussed in more detail the type of theme he wanted for the illustrations.  I pitched ideas and gave him rough sketches right there in the meeting.  In talking it out, we decided that he would be best served to have only one banner rather than three.  Had we done that in the beginning I would have saved myself at least three full days of illustrating.  I had him approve sign off on the concept he liked best and then I did a more detailed drawing that was still a little rough around the edges, but was good enough to give him an idea of what the final piece would look like.  Once he signed off on that, I fleshed out the rest of the illustration and sent it off to him for approval.  Once he saw the finalized illustration, he approved it and I was able to then design the mockup for his site and the print based mailer that would accompany it.  Both the site and the mailer were approved with minimal changes.  Here is the illustration the client ended up approving.  Of the four illustrations I did, it was my least favorite, but I guess that is the point of this whole story.</p>

<p><img class="center" src="/images/final.jpg" width="700"></p>

<h3>What did I learn?</h3>

<p>Illustrations are such a personal form of artwork.  Every artist has their own style and technique.  Because of that I think we forget that when we are working for a client the artwork can't just speak to us, it has to speak to them as well.  If I had just followed the same process that I normally do for a design, I would have saved both myself and my company a ton of time, not to mention I wouldn't have gotten rainy face over the client rejecting my art.</p>

<div style="width: 50px; height: 55px;">
    <iframe width="560" height="315" src="http://www.youtube.com/embed/wTJaiSmDXWE?rel=0" frameborder="0" allowfullscreen></iframe>
</div>

]]></content>
  </entry>
  
</feed>
